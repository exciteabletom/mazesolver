
from PIL import Image


def main(solution_path, input_path):
	"""
	Void function that marks the solution path into the image with green and saves the image

	:param solution_path: list of coordinates to the cells in the solution
	:param input_path: User-supplied path to input maze image
	"""
	solution_image = Image.open(input_path)

	for i in solution_path:
		solution_image.putpixel((i[1], i[0]), (0,255,0))

	image_name = input_path.split("/")[-1]
	image_name = image_name.split(".")[0]

	solution_image.save(f"./pics/{image_name}_out.jpg", subsampling=0, quality=100)



### Development imports
import load_maze
import create_final_image
### Enviroment Agnostic imports
import sys

# Command line argument interpreter
try:
	cmd_arg1 = sys.argv[1].lower()
except IndexError:
	print("No arguments provided")
	exit()
	
# Help command
if cmd_arg1 == "help" or cmd_arg1 == "-h":
	print("""
	Valid Commands
	--------------
	-h or help         -  Prints out this help page
	solve=<image_path> -  Solves the image at "image_path"

	Contact info
	--------------
	Email: tom@digitalnook.net
	Github: https://github.com/exciteabletom

	*Licensed under GPLv3*
	""")
	exit()

# Main solve command
elif cmd_arg1[0:5] == "solve":
	try:
		input_path = cmd_arg1.split("=")[1]
	except IndexError:
		print("No input path provided. See the help page for more info (-h) ")
		exit()

else:
	print(f"Command '{cmd_arg1}' is not valid")
	exit()
